Release Highlights
==================

Version 3.1.0 (unreleased):
--------------------------
 * KDChart now looks for Qt6 by default, rather than Qt5. If your Qt5 build broke, pass -DKDChart_QT6=OFF to CMake
 * Bug fix: Fix model about to be reset

Version 3.0.1 (unreleased):
---------------------------
 * Add WebAssembly demo-example
 * KDGantt: i18n the day-of-week label (don't hardcode first letter)
 * Bug fix: drawing duplicate connections in KDGantt graphics view
 * Bug fix: Update view when model resets its data

Version 3.0.0 (27 August 2022):
-------------------------------
** NOTE: Version 3.0 is not! binary compatible with Version 2.x **
 * Supports Qt6 in addition to Qt5 (co-installable)
 * Re-license project to MIT and remove the commercial offering
 * Minimum Qt version is 5.15.0
   (contact info@kdab.com to inquire about support for older Qt5 versions)
 * The qmake buildsystem (via autogen.py) is removed
 * Requires C++11
 * buildsystem - increase CMake min version to 3.12.0
 * buildsystem - add an 'uninstall' target
 * buildsystem: generate and install kdchart-version.h
 * Python3 bindings for Qt6. See README-bindings.md for more information.
 * The Python bindings installation path for "site-packages"
 * The Python bindings for Qt6 use the "PyKDChartQt6" namespace
 * Build in Release mode by default (in non-developer situations)

Version 2.8.0:
--------------
 * Support for Qt4 is removed
 * The qmake buildsystem is deprecated and will be removed in version 3.0
 * CMake buildsystem - increase min version to 3.1.0
 * CMake buildsystem - fix library versioning for RelWithDebInfo on Windows
 * Python bindings fixed for new PySide2 version

Version 2.7.2:
--------------
** WARNING ** Version 2.7.2 was the final release with Qt4 support **
 * CMake buildsystem - option BUILD_PYTHON_BINDINGS => KDChart_PYTHON_BINDINGS
 * CMake buildsystem - option PYTHON_BINDINGS_INSTALL_PREFIX => KDChart_PYTHON_BINDINGS_INSTALL_PREFIX
 * Fix static linking examples and unittests in the CMake buildsystem
 * small buildsystem improvements

Version 2.7.1:
--------------
 * CMake buildsystem - installs library pdb files with MSVC builds
 * CMake buildsystem - generates .pri files for qmake users
 * CMake buildsystem - option DISABLE_PYTHON_BINDINGS => BUILD_PYTHON_BINDINGS
 * CMake buildsystem - option PYTHON_BINDINGS_INSTALL_DIR =>
                       PYTHON_BINDINGS_INSTALL_PREFIX (default=CMAKE_INSTALL_PREFIX)
 * Fix build for Qt5.15
 * Fix build against a namespaced Qt

Version 2.7.0:
--------------
 * New CMake-based build system (optional)
 * Add support for spline-based line smoothing
 * New Python3 bindings for KDGantt (CMake buildsystem only. see README-bindings.md)
 * New installing file for Conan (WIP - see conan folder)

Version 2.6.2:
--------------
 * Update version number for OBS

Version 2.6.1:
--------------
 * Keep it building with modern Qt versions, at least up to Qt5.10
 * Improve tooltip handling
 * Fix horizontal bar chart
 * Use @rpath for OSX dynamic libraries
 * Fix build on Qt4/ARM

Version 2.6.0:
--------------
Features:
 * Code updated to compile with Qt 5.6
 * Optional line breaking for horizontal legends added
 * Included examples and demos were extended
 * Diagram display ranges can be made dynamic on one end and fixed
   on the other end
 * Grid lines can now be drawn only on axis annotations; this allows
   entirely custom grid lines.
Bug fixes:
 * Fixed several problems with layouts not updating when they should
 * Fixed several layout problems with axis labels
 * Many minor visual and logic bugs fixed in the included examples and demos
 * BarDiagram::setFixedBarWidth() now works as documented; previously it changed
   the width, but the result was not exactly the intended width
 * Fixed first data point not shown when markers were set to visible in Plotter
 * Fixed several issues when painting a chart using an external QPainter
 * Fixed invalid memory access in Chart::setCoordinatePlaneLayout()
 * Fixed painting off by one pixel in bar diagrams with horizontal bars
 * Fixed data boundaries reflecting the previous instead of current state of
   the data model under certain conditions
 * Data points with value NaN are now skipped instead of treated as zero
