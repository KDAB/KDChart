include( variables.pri )

CONFIG += ordered

TEMPLATE=subdirs
SUBDIRS = src examples uitools plugins 

contains($$list($$[QT_VERSION]), 4.[2-9].*) { SUBDIRS += kdchartserializer }

SUBDIRS +=qtests


VERSION  = 2.3.0

MAJOR_VERSION = 2

QT_VERSION=$$[QT_VERSION]
isEmpty(QT_VERSION) {
    error("ERROR: qmake from Qt3 detected. Please use qmake from Qt4!")
}


unix:DEFAULT_INSTALL_PREFIX = /usr/local/KDAB/KDChart-$$VERSION
win32:DEFAULT_INSTALL_PREFIX = "C:\KDAB\KDChart"-$$VERSION


# for backw. compat. we still allow manual invocation of qmake using PREFIX:
isEmpty( KDCHART_INSTALL_PREFIX ): KDCHART_INSTALL_PREFIX=$$PREFIX

# if still empty we use the default:
isEmpty( KDCHART_INSTALL_PREFIX ): KDCHART_INSTALL_PREFIX=$$DEFAULT_INSTALL_PREFIX

# if the default was either set by configure or set by the line above:
equals( KDCHART_INSTALL_PREFIX, $$DEFAULT_INSTALL_PREFIX ){
    INSTALL_PREFIX=$$DEFAULT_INSTALL_PREFIX
    unix:message( "No install prefix given, using default of" $$DEFAULT_INSTALL_PREFIX (use configure.sh -prefix DIR to specify))
    !unix:message( "No install prefix given, using default of" $$DEFAULT_INSTALL_PREFIX (use configure -prefix DIR to specify))
} else {
    INSTALL_PREFIX=\"$$KDCHART_INSTALL_PREFIX\"
}

DEBUG_SUFFIX=""
VERSION_SUFFIX=""
CONFIG(debug, debug|release) {
  !unix: DEBUG_SUFFIX = d
}
!unix:!mac:VERSION_SUFFIX=$$MAJOR_VERSION

KDCHARTLIB = kdchart$$DEBUG_SUFFIX$$VERSION_SUFFIX
TESTTOOLSLIB = testtools$$VERSION_SUFFIX
KDCHARTSERIALIZERLIB = kdchartserializer$$DEBUG_SUFFIX$$VERSION_SUFFIX
KDCHARTUITOOLSLIB = kdchartuitools$$DEBUG_SUFFIX$$VERSION_SUFFIX
KDCHARTPLUGINLIBLIB = kdchartpluginlib$$DEBUG_SUFFIX$$VERSION_SUFFIX

message(Install prefix is $$INSTALL_PREFIX)
message(This is KD Chart version $$VERSION)

# make a newline in case .qmake.cache exists and does not end with one
# (an existing cache file is replacd by the one created by the configure script)
unix:MESSAGE = '\\'$$LITERAL_HASH' KDAB qmake cache file: following lines autogenerated during qmake run'
!unix:MESSAGE = $$LITERAL_HASH' KDAB qmake cache file: following lines autogenerated during qmake run'
unix:system('cp ".confqmake.cache" ".qmake.cache"')
!unix:system('copy .confqmake.cache .qmake.cache')
system('echo $${MESSAGE} >> .qmake.cache')
# store PREFIX:
system('echo INSTALL_PREFIX=$$INSTALL_PREFIX >> .qmake.cache')
system('echo VERSION=$$VERSION >> .qmake.cache')
system('echo KDCHARTLIB=$$KDCHARTLIB >> .qmake.cache')
system('echo TESTTOOLSLIB=$$TESTTOOLSLIB >> .qmake.cache')
system('echo KDCHARTSERIALIZERLIB=$$KDCHARTSERIALIZERLIB >> .qmake.cache')
system('echo KDCHARTUITOOLSLIB=$$KDCHARTUITOOLSLIB >> .qmake.cache')
system('echo KDCHARTPLUGINLIBLIB=$$KDCHARTPLUGINLIBLIB >> .qmake.cache')

# install license(s):
exists( LICENSE ):     licenses.files  = LICENSE
exists( LICENSE.US ):  licenses.files += LICENSE.US
exists( LICENSE.GPL ): licenses.files += LICENSE.GPL
licenses.path = $$INSTALL_PREFIX
INSTALLS += licenses

exists( README ) {
    readme.files = README
    readme.path = $$INSTALL_PREFIX
    INSTALLS += readme
}


# forward make test calls to qtests:
test.target=test
test.commands=(cd qtests && $(MAKE) test)
test.depends = $(TARGET)
QMAKE_EXTRA_TARGETS += test
